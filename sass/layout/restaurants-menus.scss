@use "../mixin.scss";

.restaurants-menu {
    background-color: #f6f6f6;
    max-width: 1280px;
    margin: auto;
}

.restaurants-container {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap:20px;
    padding-bottom: 2rem;
    @media (max-width: 870px) {
        grid-template-columns: 1fr;
    } /* media queries display column under 870 */
    .nouveau {
        position: relative;
    }
    .nouveau::before {
        position: absolute;
        height: 3rem;
        width: 8rem;
        display: grid;
        place-items: center;
        right: 1.5rem;
        top: 1.5rem;
        background-color: var(--cyan);
        content: "Nouveau";
        color: #34bb99;
        font-weight: 600;
    }
}

.card-menus {
    border-radius: 1rem;
    background-color: white;
    & p {
        margin: 0;
    }
    &:hover { 
        transform: scale(1.01);
        cursor: pointer;
        transition:all 400ms ease;
            }
    }

.card-menus img {
    height: 150px;
    width: 100%;
    object-fit: cover;
    object-position: center;
    border-radius: 1rem 1rem 0 0;
}

.card-description {
    padding: 1rem;
    display: flex;
    align-items: center;
    position: relative;
    & .fas { /* Hearth solid with gradient but opacity 0 */
        color: transparent;
        @include mixin.gradient-purple-pink;
        background-clip: text;
        -webkit-background-clip: text;
        opacity: 0;
        transition: all 300ms ease-in-out;
    }
    &:hover .fas { /* displaying heart opacity 1 */
        opacity: 1;
    }
    &:hover .far { /* regular hearth disappear opacity 0 */
        opacity: 0;
    }
}

.card-text {
    flex: 1;
}

.heart-position { /* Placing the two earth in one square flexblox on each other => parent must be relative in case of absolute use */
    display: flex;
    align-items: center;
    justify-content: center;
    position: relative;
}

.heart-button {
 position: absolute;
}
