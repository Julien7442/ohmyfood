@use "../mixin.scss";

.operation {
    counter-reset: number; /* Set a counter named 'number', and its initial value is 0. */
    padding: 3rem 0;
    max-width: 1280px;
    margin: auto;
    width: 90%;
& ol {
display: flex;
gap: 40px;
padding: 0 10px;
font-weight: bold;
font-size: 18px;
@media (max-width: 870px) {
    flex-direction: column;
    } /* media queries display column under 870 */
}

& li { /* Three li container */
    position: relative;
    background: #f6f6f6;
    @include mixin.box-shadow-main;
    padding: 25px 20px;
    list-style-type: none; /* removing number of li */
    flex-grow: 1; /* taking entire space avalaible */
    border-radius: 15px;
    &::before { /* creating own counter for easier manipulation */
        counter-increment: (number); /* Increment the value of number counter by 1 */
        content: counter(number);
        position: absolute; /* if absolute position is specified, parent must be relative */
        background-color: var(--purple);
        color: white;
        border-radius: 25px;
        width: 25px;
        height: 25px;
        display: grid;  /* to place number in center. display flex align-item justify-content workaround */
        place-items: center;
        left: -10px;
        bottom: 25px;
    }


&:hover { 
    transition:all 400ms ease;
    background: rgb(253, 239, 252);
    cursor: pointer;
    transform: scale(1.02);
    i::before {
        color: var(--purple);
    }
        }

& i { /* Icon margin */
        margin-right: 1.8rem;
        margin-left: 1.8rem;
        color: grey;
    }
    }
}



